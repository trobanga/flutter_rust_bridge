"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/flutter_rust_bridge/","docId":"index"},{"type":"link","label":"Quickstart","href":"/flutter_rust_bridge/quickstart","docId":"quickstart"},{"type":"link","label":"Demo","href":"/flutter_rust_bridge/demo","docId":"demo"},{"type":"category","label":"Guides","collapsed":false,"items":[{"type":"link","label":"Overview","href":"/flutter_rust_bridge/guides/overview","docId":"guides/overview"},{"type":"category","label":"Types","collapsed":true,"items":[{"type":"link","label":"Overview","href":"/flutter_rust_bridge/guides/types/overview","docId":"guides/types/overview"},{"type":"category","label":"Translatable types","collapsed":true,"items":[{"type":"link","label":"Simple correspondence","href":"/flutter_rust_bridge/guides/types/translatable/simple-correspondence","docId":"guides/types/translatable/simple-correspondence"},{"type":"category","label":"Detailed types","collapsed":true,"items":[{"type":"link","label":"Vec and array","href":"/flutter_rust_bridge/guides/types/translatable/detailed/vec","docId":"guides/types/translatable/detailed/vec"},{"type":"link","label":"Structs","href":"/flutter_rust_bridge/guides/types/translatable/detailed/struct","docId":"guides/types/translatable/detailed/struct"},{"type":"link","label":"Enums","href":"/flutter_rust_bridge/guides/types/translatable/detailed/enum","docId":"guides/types/translatable/detailed/enum"},{"type":"link","label":"Tuples","href":"/flutter_rust_bridge/guides/types/translatable/detailed/tuple","docId":"guides/types/translatable/detailed/tuple"},{"type":"link","label":"Options","href":"/flutter_rust_bridge/guides/types/translatable/detailed/option","docId":"guides/types/translatable/detailed/option"},{"type":"link","label":"Type alias","href":"/flutter_rust_bridge/guides/types/translatable/detailed/alias","docId":"guides/types/translatable/detailed/alias"},{"type":"link","label":"DateTime (Chrono)","href":"/flutter_rust_bridge/guides/types/translatable/detailed/chrono","docId":"guides/types/translatable/detailed/chrono"},{"type":"link","label":"UUID","href":"/flutter_rust_bridge/guides/types/translatable/detailed/uuid","docId":"guides/types/translatable/detailed/uuid"}],"collapsible":true,"href":"/flutter_rust_bridge/guides/types/translatable/detailed/"},{"type":"link","label":"Return Types & Exceptions","href":"/flutter_rust_bridge/guides/types/translatable/return","docId":"guides/types/translatable/return"},{"type":"link","label":"Stream / Iterator","href":"/flutter_rust_bridge/guides/types/translatable/stream","docId":"guides/types/translatable/stream"},{"type":"link","label":"Zero copy","href":"/flutter_rust_bridge/guides/types/translatable/zero-copy","docId":"guides/types/translatable/zero-copy"},{"type":"category","label":"External types","collapsed":true,"items":[{"type":"link","label":"Same crate","href":"/flutter_rust_bridge/guides/types/translatable/external/same-crate","docId":"guides/types/translatable/external/same-crate"},{"type":"link","label":"Different crates","href":"/flutter_rust_bridge/guides/types/translatable/external/diff-crate","docId":"guides/types/translatable/external/diff-crate"}],"collapsible":true,"href":"/flutter_rust_bridge/guides/types/translatable/external/"}],"collapsible":true,"href":"/flutter_rust_bridge/guides/types/translatable/"},{"type":"category","label":"Arbitrary types","collapsed":true,"items":[{"type":"link","label":"Automatic arbitrary Rust type","href":"/flutter_rust_bridge/guides/types/arbitrary/rust-auto-opaque","docId":"guides/types/arbitrary/rust-auto-opaque"},{"type":"link","label":"Automatic arbitrary Dart type","href":"/flutter_rust_bridge/guides/types/arbitrary/dart-opaque","docId":"guides/types/arbitrary/dart-opaque"},{"type":"link","label":"Manual arbitrary Rust type","href":"/flutter_rust_bridge/guides/types/arbitrary/rust-opaque","docId":"guides/types/arbitrary/rust-opaque"},{"type":"link","label":"Dart dynamic type","href":"/flutter_rust_bridge/guides/types/arbitrary/dart-dynamic","docId":"guides/types/arbitrary/dart-dynamic"}],"collapsible":true,"href":"/flutter_rust_bridge/guides/types/arbitrary/"}],"collapsible":true,"href":"/flutter_rust_bridge/guides/types/"},{"type":"category","label":"Concurrency and async","collapsed":true,"items":[{"type":"link","label":"Overview","href":"/flutter_rust_bridge/guides/concurrency/overview","docId":"guides/concurrency/overview"},{"type":"link","label":"Synchronous Rust (thread pool)","href":"/flutter_rust_bridge/guides/concurrency/sync-rust","docId":"guides/concurrency/sync-rust"},{"type":"link","label":"Asynchronous Rust","href":"/flutter_rust_bridge/guides/concurrency/async-rust","docId":"guides/concurrency/async-rust"},{"type":"link","label":"Synchronous Dart","href":"/flutter_rust_bridge/guides/concurrency/sync-dart","docId":"guides/concurrency/sync-dart"},{"type":"link","label":"Asynchronous Dart","href":"/flutter_rust_bridge/guides/concurrency/async-dart","docId":"guides/concurrency/async-dart"}],"collapsible":true,"href":"/flutter_rust_bridge/guides/concurrency/"},{"type":"category","label":"Two-way Road","collapsed":true,"items":[{"type":"link","label":"Dart calls Rust","href":"/flutter_rust_bridge/guides/direction/dart-call-rust","docId":"guides/direction/dart-call-rust"},{"type":"link","label":"Rust calls Dart","href":"/flutter_rust_bridge/guides/direction/rust-call-dart","docId":"guides/direction/rust-call-dart"}],"collapsible":true,"href":"/flutter_rust_bridge/guides/direction/"},{"type":"category","label":"Customization","collapsed":true,"items":[{"type":"link","label":"Code generator","href":"/flutter_rust_bridge/guides/custom/codegen","docId":"guides/custom/codegen"},{"type":"link","label":"Rust runtime","href":"/flutter_rust_bridge/guides/custom/rust","docId":"guides/custom/rust"},{"type":"link","label":"Dart runtime","href":"/flutter_rust_bridge/guides/custom/dart","docId":"guides/custom/dart"}],"collapsible":true,"href":"/flutter_rust_bridge/guides/custom/"},{"type":"category","label":"Cross-platform utils","collapsed":true,"items":[{"type":"link","label":"Overview","href":"/flutter_rust_bridge/guides/cross-platform/overview","docId":"guides/cross-platform/overview"},{"type":"link","label":"Async (Tokio)","href":"/flutter_rust_bridge/guides/cross-platform/async","docId":"guides/cross-platform/async"},{"type":"link","label":"Thread pools","href":"/flutter_rust_bridge/guides/cross-platform/thread-pool","docId":"guides/cross-platform/thread-pool"},{"type":"link","label":"Isolate","href":"/flutter_rust_bridge/guides/cross-platform/isolate","docId":"guides/cross-platform/isolate"}],"collapsible":true,"href":"/flutter_rust_bridge/guides/cross-platform/"},{"type":"category","label":"Miscellaneous","collapsed":true,"items":[{"type":"link","label":"Directory structure (multi-file)","href":"/flutter_rust_bridge/guides/miscellaneous/directory","docId":"guides/miscellaneous/directory"},{"type":"link","label":"Methods","href":"/flutter_rust_bridge/guides/miscellaneous/methods","docId":"guides/miscellaneous/methods"},{"type":"link","label":"Codec","href":"/flutter_rust_bridge/guides/miscellaneous/codec","docId":"guides/miscellaneous/codec"},{"type":"link","label":"Run in build.rs","href":"/flutter_rust_bridge/guides/miscellaneous/build-rs","docId":"guides/miscellaneous/build-rs"},{"type":"link","label":"Expanding macros","href":"/flutter_rust_bridge/guides/miscellaneous/expanding-macros","docId":"guides/miscellaneous/expanding-macros"},{"type":"link","label":"Parameter defaults","href":"/flutter_rust_bridge/guides/miscellaneous/default","docId":"guides/miscellaneous/default"},{"type":"link","label":"Safety and CI","href":"/flutter_rust_bridge/guides/miscellaneous/safety","docId":"guides/miscellaneous/safety"},{"type":"link","label":"Compatibility and versioning","href":"/flutter_rust_bridge/guides/miscellaneous/compatibility","docId":"guides/miscellaneous/compatibility"},{"type":"link","label":"Deployment","href":"/flutter_rust_bridge/guides/miscellaneous/deployment","docId":"guides/miscellaneous/deployment"},{"type":"link","label":"What\'s new in V2","href":"/flutter_rust_bridge/guides/miscellaneous/whats-new","docId":"guides/miscellaneous/whats-new"},{"type":"link","label":"Upgrade to V2","href":"/flutter_rust_bridge/guides/miscellaneous/upgrade","docId":"guides/miscellaneous/upgrade"}],"collapsible":true,"href":"/flutter_rust_bridge/guides/miscellaneous/"},{"type":"category","label":"How-to","collapsed":true,"items":[{"type":"link","label":"Stack Traces","href":"/flutter_rust_bridge/guides/how-to/stack-trace","docId":"guides/how-to/stack-trace"},{"type":"link","label":"Debugging","href":"/flutter_rust_bridge/guides/how-to/debug","docId":"guides/how-to/debug"},{"type":"link","label":"Logging","href":"/flutter_rust_bridge/guides/how-to/logging","docId":"guides/how-to/logging"},{"type":"link","label":"Report errors","href":"/flutter_rust_bridge/guides/how-to/report-error","docId":"guides/how-to/report-error"},{"type":"link","label":"Testing and mocking","href":"/flutter_rust_bridge/guides/how-to/test","docId":"guides/how-to/test"},{"type":"link","label":"Cancellable tasks","href":"/flutter_rust_bridge/guides/how-to/cancel","docId":"guides/how-to/cancel"},{"type":"link","label":"Inspection / Hooks / Aspect-oriented programming","href":"/flutter_rust_bridge/guides/how-to/inspect","docId":"guides/how-to/inspect"},{"type":"link","label":"Customize Rust library loading","href":"/flutter_rust_bridge/guides/how-to/load-library","docId":"guides/how-to/load-library"},{"type":"link","label":"Initialization","href":"/flutter_rust_bridge/guides/how-to/init","docId":"guides/how-to/init"},{"type":"link","label":"Stateful Rust","href":"/flutter_rust_bridge/guides/how-to/stateful-rust","docId":"guides/how-to/stateful-rust"},{"type":"link","label":"Protobuf / JSON / etc","href":"/flutter_rust_bridge/guides/how-to/protobuf-json","docId":"guides/how-to/protobuf-json"},{"type":"link","label":"Avoid regressions","href":"/flutter_rust_bridge/guides/how-to/regression","docId":"guides/how-to/regression"},{"type":"link","label":"Object pools","href":"/flutter_rust_bridge/guides/how-to/object-pool","docId":"guides/how-to/object-pool"}],"collapsible":true,"href":"/flutter_rust_bridge/guides/how-to/"},{"type":"link","label":"Who is using it","href":"/flutter_rust_bridge/guides/users","docId":"guides/users"},{"type":"category","label":"Performance","collapsed":true,"items":[{"type":"link","label":"Overview","href":"/flutter_rust_bridge/guides/performance/overview","docId":"guides/performance/overview"},{"type":"link","label":"Dashboard","href":"https://fzyzcjy.github.io/flutter_rust_bridge/guides/performance/dashboard"},{"type":"link","label":"Raw visualization","href":"https://fzyzcjy.github.io/flutter_rust_bridge/dev/bench/"}],"collapsible":true,"href":"/flutter_rust_bridge/guides/performance/"},{"type":"category","label":"Contributor guide & Implementations","collapsed":true,"items":[{"type":"link","label":"Overview","href":"/flutter_rust_bridge/guides/contributing/overview","docId":"guides/contributing/overview"},{"type":"link","label":"Tips for development","href":"/flutter_rust_bridge/guides/contributing/tip","docId":"guides/contributing/tip"},{"type":"category","label":"Submodules","collapsed":true,"items":[{"type":"link","label":"CST Codec","href":"/flutter_rust_bridge/guides/contributing/submodules/cst-codec","docId":"guides/contributing/submodules/cst-codec"},{"type":"link","label":"DCO Codec","href":"/flutter_rust_bridge/guides/contributing/submodules/dco-codec","docId":"guides/contributing/submodules/dco-codec"},{"type":"link","label":"SSE Codec","href":"/flutter_rust_bridge/guides/contributing/submodules/sse-codec","docId":"guides/contributing/submodules/sse-codec"},{"type":"link","label":"Rust Opaque","href":"/flutter_rust_bridge/guides/contributing/submodules/rust-opaque","docId":"guides/contributing/submodules/rust-opaque"},{"type":"link","label":"Dart Opaque","href":"/flutter_rust_bridge/guides/contributing/submodules/dart-opaque","docId":"guides/contributing/submodules/dart-opaque"}],"collapsible":true,"href":"/flutter_rust_bridge/guides/contributing/submodules/"}],"collapsible":true,"href":"/flutter_rust_bridge/guides/contributing/"}],"collapsible":true,"href":"/flutter_rust_bridge/guides/"},{"type":"category","label":"Manual (75 entries)","collapsed":true,"items":[{"type":"link","label":"Troubleshooting","href":"/flutter_rust_bridge/manual/troubleshooting","docId":"manual/troubleshooting"},{"type":"link","label":"Ffigen Troubleshooting","href":"/flutter_rust_bridge/manual/ffigen-troubleshooting","docId":"manual/ffigen-troubleshooting"},{"type":"link","label":"Changelog","href":"/flutter_rust_bridge/manual/changelog","docId":"manual/changelog"},{"type":"category","label":"Integrate Rust with Dart","collapsed":false,"items":[{"type":"link","label":"Overview","href":"/flutter_rust_bridge/manual/integrate/overview","docId":"manual/integrate/overview"},{"type":"link","label":"flutter_rust_bridge_codegen create/integrate command","href":"/flutter_rust_bridge/manual/integrate/builtin","docId":"manual/integrate/builtin"},{"type":"link","label":"Native assets","href":"/flutter_rust_bridge/manual/integrate/native-assets","docId":"manual/integrate/native-assets"},{"type":"link","label":"Cargokit","href":"/flutter_rust_bridge/manual/integrate/cargokit","docId":"manual/integrate/cargokit"},{"type":"category","label":"Use code template to create new projects","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Creating a new project","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Android setup","href":"/flutter_rust_bridge/manual/integrate/template/setup/android","docId":"manual/integrate/template/setup/android"},{"type":"link","label":"iOS setup","href":"/flutter_rust_bridge/manual/integrate/template/setup/ios","docId":"manual/integrate/template/setup/ios"},{"type":"link","label":"Web setup","href":"/flutter_rust_bridge/manual/integrate/template/setup/web","docId":"manual/integrate/template/setup/web"},{"type":"link","label":"Windows and Linux","href":"/flutter_rust_bridge/manual/integrate/template/setup/desktop","docId":"manual/integrate/template/setup/desktop"},{"type":"link","label":"Other platforms","href":"/flutter_rust_bridge/manual/integrate/template/setup/others","docId":"manual/integrate/template/setup/others"}],"href":"/flutter_rust_bridge/manual/integrate/template/setup/"},{"type":"category","label":"Template tour","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"native/src/api.rs","href":"/flutter_rust_bridge/manual/integrate/template/tour/api","docId":"manual/integrate/template/tour/api"},{"type":"link","label":"android/app/build.gradle","href":"/flutter_rust_bridge/manual/integrate/template/tour/gradle","docId":"manual/integrate/template/tour/gradle"},{"type":"link","label":"native/native.xcodeproj","href":"/flutter_rust_bridge/manual/integrate/template/tour/native-proj","docId":"manual/integrate/template/tour/native-proj"},{"type":"link","label":"justfile","href":"/flutter_rust_bridge/manual/integrate/template/tour/justfile","docId":"manual/integrate/template/tour/justfile"},{"type":"link","label":"rust.cmake","href":"/flutter_rust_bridge/manual/integrate/template/tour/cmake","docId":"manual/integrate/template/tour/cmake"}],"href":"/flutter_rust_bridge/manual/integrate/template/tour/"},{"type":"category","label":"Generating code","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installing codegen","href":"/flutter_rust_bridge/manual/integrate/template/generate/install","docId":"manual/integrate/template/generate/install"},{"type":"link","label":"Adding new code","href":"/flutter_rust_bridge/manual/integrate/template/generate/adding-code","docId":"manual/integrate/template/generate/adding-code"},{"type":"link","label":"Using build_runner","href":"/flutter_rust_bridge/manual/integrate/template/generate/build-runner","docId":"manual/integrate/template/generate/build-runner"},{"type":"link","label":"Wrapping up","href":"/flutter_rust_bridge/manual/integrate/template/generate/finish","docId":"manual/integrate/template/generate/finish"}],"href":"/flutter_rust_bridge/manual/integrate/template/generate/"}],"href":"/flutter_rust_bridge/manual/integrate/template/"},{"type":"category","label":"Use BrickHub to add to existing projects","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Creating a new crate","href":"/flutter_rust_bridge/manual/integrate/existing/new-crate","docId":"manual/integrate/existing/new-crate"},{"type":"link","label":"Installing dependencies","href":"/flutter_rust_bridge/manual/integrate/existing/deps","docId":"manual/integrate/existing/deps"},{"type":"category","label":"Integrating with Android","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Hooking onto tasks","href":"/flutter_rust_bridge/manual/integrate/existing/android/tasks","docId":"manual/integrate/existing/android/tasks"},{"type":"link","label":"CMake with Gradle","href":"/flutter_rust_bridge/manual/integrate/existing/android/cmake","docId":"manual/integrate/existing/android/cmake"}],"href":"/flutter_rust_bridge/manual/integrate/existing/android/"},{"type":"category","label":"Integrating with iOS/MacOS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Creating the Rust project","href":"/flutter_rust_bridge/manual/integrate/existing/ios/proj","docId":"manual/integrate/existing/ios/proj"},{"type":"link","label":"Linking the project","href":"/flutter_rust_bridge/manual/integrate/existing/ios/linking","docId":"manual/integrate/existing/ios/linking"},{"type":"link","label":"Generating bindings","href":"/flutter_rust_bridge/manual/integrate/existing/ios/gen","docId":"manual/integrate/existing/ios/gen"},{"type":"link","label":"Using dummy headers","href":"/flutter_rust_bridge/manual/integrate/existing/ios/headers","docId":"manual/integrate/existing/ios/headers"},{"type":"link","label":"Integrating with MacOS","href":"/flutter_rust_bridge/manual/integrate/existing/ios/macos","docId":"manual/integrate/existing/ios/macos"}],"href":"/flutter_rust_bridge/manual/integrate/existing/ios/"},{"type":"link","label":"Integrating with Windows and Linux","href":"/flutter_rust_bridge/manual/integrate/existing/desktop","docId":"manual/integrate/existing/desktop"},{"type":"link","label":"Integrating with Web","href":"/flutter_rust_bridge/manual/integrate/existing/web","docId":"manual/integrate/existing/web"},{"type":"link","label":"Using the dynamic library","href":"/flutter_rust_bridge/manual/integrate/existing/usage","docId":"manual/integrate/existing/usage"},{"type":"link","label":"Wrapping up","href":"/flutter_rust_bridge/manual/integrate/existing/finish","docId":"manual/integrate/existing/finish"}],"href":"/flutter_rust_bridge/manual/integrate/existing/"},{"type":"category","label":"Creating a Dart/Flutter library with binary release","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Overview","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Setup","href":"/flutter_rust_bridge/manual/integrate/library/overview/setup","docId":"manual/integrate/library/overview/setup"},{"type":"link","label":"Monorepo with Melos","href":"/flutter_rust_bridge/manual/integrate/library/overview/melos","docId":"manual/integrate/library/overview/melos"}],"href":"/flutter_rust_bridge/manual/integrate/library/overview/"},{"type":"category","label":"Creating the libraries","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Dart-only base","href":"/flutter_rust_bridge/manual/integrate/library/creating-libraries/dart-only","docId":"manual/integrate/library/creating-libraries/dart-only"},{"type":"link","label":"Flutter wrapper","href":"/flutter_rust_bridge/manual/integrate/library/creating-libraries/flutter-wrapper","docId":"manual/integrate/library/creating-libraries/flutter-wrapper"}],"href":"/flutter_rust_bridge/manual/integrate/library/creating-libraries/"},{"type":"category","label":"Platform setup","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Windows & Linux","href":"/flutter_rust_bridge/manual/integrate/library/platform-setup/windows-and-linux","docId":"manual/integrate/library/platform-setup/windows-and-linux"},{"type":"link","label":"iOS & macOS","href":"/flutter_rust_bridge/manual/integrate/library/platform-setup/ios-and-macos","docId":"manual/integrate/library/platform-setup/ios-and-macos"},{"type":"link","label":"Android","href":"/flutter_rust_bridge/manual/integrate/library/platform-setup/android","docId":"manual/integrate/library/platform-setup/android"}],"href":"/flutter_rust_bridge/manual/integrate/library/platform-setup/"},{"type":"link","label":"Continuous Integration & Deployment (CI/CD)","href":"/flutter_rust_bridge/manual/integrate/library/ci","docId":"manual/integrate/library/ci"}],"href":"/flutter_rust_bridge/manual/integrate/library/"}],"collapsible":true,"href":"/flutter_rust_bridge/manual/integrate"},{"type":"category","label":"Miscellaneous","collapsed":false,"items":[{"type":"link","label":"Cross-origin in Web","href":"/flutter_rust_bridge/manual/miscellaneous/web-cross-origin","docId":"manual/miscellaneous/web-cross-origin"},{"type":"link","label":"Limitations of WASM","href":"/flutter_rust_bridge/manual/miscellaneous/wasm-limitations","docId":"manual/miscellaneous/wasm-limitations"},{"type":"category","label":"Articles","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Async in Rust","href":"/flutter_rust_bridge/manual/miscellaneous/article/async-in-rust","docId":"manual/miscellaneous/article/async-in-rust"}],"href":"/flutter_rust_bridge/manual/miscellaneous/article/"},{"type":"category","label":"Archived documentations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Quickstart","href":"/flutter_rust_bridge/manual/miscellaneous/archived/quickstart","docId":"manual/miscellaneous/archived/quickstart"},{"type":"category","label":"Tutorial: A Flutter+Rust app","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Tutorial: A Flutter+Rust app","href":"/flutter_rust_bridge/manual/miscellaneous/archived/tutorial-with-flutter/tutorial","docId":"manual/miscellaneous/archived/tutorial-with-flutter/tutorial"},{"type":"link","label":"Android setup","href":"/flutter_rust_bridge/manual/miscellaneous/archived/tutorial-with-flutter/setup-android","docId":"manual/miscellaneous/archived/tutorial-with-flutter/setup-android"},{"type":"link","label":"Alternative NDK setup","href":"/flutter_rust_bridge/manual/miscellaneous/archived/tutorial-with-flutter/alternative-ndk","docId":"manual/miscellaneous/archived/tutorial-with-flutter/alternative-ndk"}],"href":"/flutter_rust_bridge/manual/miscellaneous/archived/tutorial-with-flutter/"},{"type":"link","label":"Set up Flutter/Dart+Rust support from scratch","href":"/flutter_rust_bridge/manual/miscellaneous/archived/set-up-from-scratch","docId":"manual/miscellaneous/archived/set-up-from-scratch"},{"type":"link","label":"Tutorial: Pure Dart","href":"/flutter_rust_bridge/manual/miscellaneous/archived/tutorial-pure-dart","docId":"manual/miscellaneous/archived/tutorial-pure-dart"},{"type":"link","label":"Misc operations in contributing","href":"/flutter_rust_bridge/manual/miscellaneous/archived/misc-contributing","docId":"manual/miscellaneous/archived/misc-contributing"},{"type":"link","label":"Miscellaneous features","href":"/flutter_rust_bridge/manual/miscellaneous/archived/misc-feature","docId":"manual/miscellaneous/archived/misc-feature"},{"type":"link","label":"WASM","href":"/flutter_rust_bridge/manual/miscellaneous/archived/wasm","docId":"manual/miscellaneous/archived/wasm"},{"type":"link","label":"Unit tests in dart","href":"/flutter_rust_bridge/manual/miscellaneous/archived/unit-tests-dart","docId":"manual/miscellaneous/archived/unit-tests-dart"},{"type":"link","label":"Building a WASM binary manually","href":"/flutter_rust_bridge/manual/miscellaneous/archived/build-wasm","docId":"manual/miscellaneous/archived/build-wasm"},{"type":"link","label":"Multiple files","href":"/flutter_rust_bridge/manual/miscellaneous/archived/multiple-files","docId":"manual/miscellaneous/archived/multiple-files"},{"type":"link","label":"Generating multiple files","href":"/flutter_rust_bridge/manual/miscellaneous/archived/generate-multiple-files","docId":"manual/miscellaneous/archived/generate-multiple-files"}],"href":"/flutter_rust_bridge/manual/miscellaneous/archived/"}],"collapsible":true,"href":"/flutter_rust_bridge/manual/miscellaneous"}],"collapsible":true,"href":"/flutter_rust_bridge/manual/"}]},"docs":{"demo":{"id":"demo","title":"Demo","description":"Some scenarios when using Rust and Dart include:","sidebar":"tutorialSidebar"},"guides/concurrency/async-dart":{"id":"guides/concurrency/async-dart","title":"Asynchronous Dart","description":"This library generates functions that are asynchronous in Dart by default. So you will see fn f(..) -> String becomes Future f(..) with that interesting Future.","sidebar":"tutorialSidebar"},"guides/concurrency/async-rust":{"id":"guides/concurrency/async-rust","title":"Asynchronous Rust","description":"The async Rust functions, async fn f() {}, are supported as well.","sidebar":"tutorialSidebar"},"guides/concurrency/index":{"id":"guides/concurrency/index","title":"Concurrency and async","description":"","sidebar":"tutorialSidebar"},"guides/concurrency/overview":{"id":"guides/concurrency/overview","title":"Overview","description":"For each of Rust and Dart, we support the synchronous and asynchronous grammar.","sidebar":"tutorialSidebar"},"guides/concurrency/sync-dart":{"id":"guides/concurrency/sync-dart","title":"Synchronous Dart","description":"In order to generate synchronous functions in Dart,","sidebar":"tutorialSidebar"},"guides/concurrency/sync-rust":{"id":"guides/concurrency/sync-rust","title":"Synchronous Rust (thread pool)","description":"You can write normal (non-async) Rust functions (fn f() {}).","sidebar":"tutorialSidebar"},"guides/contributing/index":{"id":"guides/contributing/index","title":"Contributor guide & Implementations","description":"","sidebar":"tutorialSidebar"},"guides/contributing/overview":{"id":"guides/contributing/overview","title":"Overview","description":"Prelude","sidebar":"tutorialSidebar"},"guides/contributing/submodules/cst-codec":{"id":"guides/contributing/submodules/cst-codec","title":"CST Codec","description":"Terminology","sidebar":"tutorialSidebar"},"guides/contributing/submodules/dart-opaque":{"id":"guides/contributing/submodules/dart-opaque","title":"Dart Opaque","description":"Design","sidebar":"tutorialSidebar"},"guides/contributing/submodules/dco-codec":{"id":"guides/contributing/submodules/dco-codec","title":"DCO Codec","description":"More about function call example","sidebar":"tutorialSidebar"},"guides/contributing/submodules/index":{"id":"guides/contributing/submodules/index","title":"Submodules","description":"","sidebar":"tutorialSidebar"},"guides/contributing/submodules/rust-opaque":{"id":"guides/contributing/submodules/rust-opaque","title":"Rust Opaque","description":"Design","sidebar":"tutorialSidebar"},"guides/contributing/submodules/sse-codec":{"id":"guides/contributing/submodules/sse-codec","title":"SSE Codec","description":"This codec uses a simple serialization based approach.","sidebar":"tutorialSidebar"},"guides/contributing/tip":{"id":"guides/contributing/tip","title":"Tips for development","description":"The ./frb_internal","sidebar":"tutorialSidebar"},"guides/cross-platform/async":{"id":"guides/cross-platform/async","title":"Async (Tokio)","description":"On non-web platforms, tokio is widely used for asynchronous Rust.","sidebar":"tutorialSidebar"},"guides/cross-platform/index":{"id":"guides/cross-platform/index","title":"Cross-platform utils","description":"","sidebar":"tutorialSidebar"},"guides/cross-platform/isolate":{"id":"guides/cross-platform/isolate","title":"Isolate","description":"Flutter web does not have the isolate functionalities, and those only exist on non-web platforms.","sidebar":"tutorialSidebar"},"guides/cross-platform/overview":{"id":"guides/cross-platform/overview","title":"Overview","description":"The API here may subject to change and does not follow semver that is trying to be guaranteed throughout the package","sidebar":"tutorialSidebar"},"guides/cross-platform/thread-pool":{"id":"guides/cross-platform/thread-pool","title":"Thread pools","description":"Thread pools also often do not run directly on the web,","sidebar":"tutorialSidebar"},"guides/custom/codegen":{"id":"guides/custom/codegen","title":"Code generator","description":"Provide parameters to codegen","sidebar":"tutorialSidebar"},"guides/custom/dart":{"id":"guides/custom/dart","title":"Dart runtime","description":"Constructor parameters","sidebar":"tutorialSidebar"},"guides/custom/index":{"id":"guides/custom/index","title":"Customization","description":"","sidebar":"tutorialSidebar"},"guides/custom/rust":{"id":"guides/custom/rust","title":"Rust runtime","description":"Customize handler","sidebar":"tutorialSidebar"},"guides/direction/dart-call-rust":{"id":"guides/direction/dart-call-rust","title":"Dart calls Rust","description":"The Dart code can seamlessly call the Rust code.","sidebar":"tutorialSidebar"},"guides/direction/index":{"id":"guides/direction/index","title":"Two-way Road","description":"","sidebar":"tutorialSidebar"},"guides/direction/rust-call-dart":{"id":"guides/direction/rust-call-dart","title":"Rust calls Dart","description":"Without this feature, the bridge would be a one-way road; but now we have two-way road ;)","sidebar":"tutorialSidebar"},"guides/how-to/cancel":{"id":"guides/how-to/cancel","title":"Cancellable tasks","description":"When the Rust code is computationally heavy, you may want to cancel it at the middle when,","sidebar":"tutorialSidebar"},"guides/how-to/debug":{"id":"guides/how-to/debug","title":"Debugging","description":"Debuggers","sidebar":"tutorialSidebar"},"guides/how-to/index":{"id":"guides/how-to/index","title":"How-to","description":"","sidebar":"tutorialSidebar"},"guides/how-to/init":{"id":"guides/how-to/init","title":"Initialization","description":"Suppose you want to initialize the Rust side during Flutter/Dart startup,","sidebar":"tutorialSidebar"},"guides/how-to/inspect":{"id":"guides/how-to/inspect","title":"Inspection / Hooks / Aspect-oriented programming","description":"Sometimes, we may want to add some logic when things like Dart-call-Rust starts and ends.","sidebar":"tutorialSidebar"},"guides/how-to/load-library":{"id":"guides/how-to/load-library","title":"Customize Rust library loading","description":"By default, during initialization,","sidebar":"tutorialSidebar"},"guides/how-to/logging":{"id":"guides/how-to/logging","title":"Logging","description":"Since I have seen some questions asking how logging can be implemented with a Flutter + Rust application, here are some examples.","sidebar":"tutorialSidebar"},"guides/how-to/object-pool":{"id":"guides/how-to/object-pool","title":"Object pools","description":"When there are some big objects, or even non-encodable objects in the Rust side,","sidebar":"tutorialSidebar"},"guides/how-to/protobuf-json":{"id":"guides/how-to/protobuf-json","title":"Protobuf / JSON / etc","description":"If you want to use Protobuf, JSON, or whatever serialization methods, it is also quite easy:","sidebar":"tutorialSidebar"},"guides/how-to/regression":{"id":"guides/how-to/regression","title":"Avoid regressions","description":"Every code change will have to pass the CI with various checks and tons of tests (see the CI part of this page),","sidebar":"tutorialSidebar"},"guides/how-to/report-error":{"id":"guides/how-to/report-error","title":"Report errors","description":"To configure to report errors to your backend, in addition to telling Dart, we can simply use a custom Handler:","sidebar":"tutorialSidebar"},"guides/how-to/stack-trace":{"id":"guides/how-to/stack-trace","title":"Stack Traces","description":"This is a Rust langauge feature, and flutterrustbridge just keeps the default configuration by default.","sidebar":"tutorialSidebar"},"guides/how-to/stateful-rust":{"id":"guides/how-to/stateful-rust","title":"Stateful Rust","description":"What if our Rust code needs to be stateful?","sidebar":"tutorialSidebar"},"guides/how-to/test":{"id":"guides/how-to/test","title":"Testing and mocking","description":"In this section, we discuss some of the ways to test an application / library","sidebar":"tutorialSidebar"},"guides/index":{"id":"guides/index","title":"Guides","description":"","sidebar":"tutorialSidebar"},"guides/miscellaneous/build-rs":{"id":"guides/miscellaneous/build-rs","title":"Run in build.rs","description":"There are basically two approaches to execute the code generator. The first and most evident approach is to directly execute the flutterrustbridge_codegen in command line.","sidebar":"tutorialSidebar"},"guides/miscellaneous/codec":{"id":"guides/miscellaneous/codec","title":"Codec","description":"The \\"codec\\" here means how Dart data becomes accessible from the Rust side, and vise versa.","sidebar":"tutorialSidebar"},"guides/miscellaneous/compatibility":{"id":"guides/miscellaneous/compatibility","title":"Compatibility and versioning","description":"Since flutterrustbridge v2, we will try our best to follow semantics versioning","sidebar":"tutorialSidebar"},"guides/miscellaneous/default":{"id":"guides/miscellaneous/default","title":"Parameter defaults","description":"Dart allows default values for function and constructor parameters, and you can achieve the same effect using #[frb(default)]. The syntax is as follows:","sidebar":"tutorialSidebar"},"guides/miscellaneous/deployment":{"id":"guides/miscellaneous/deployment","title":"Deployment","description":"Please follow the standard Flutter\'s deployment guides, with one extra bit:","sidebar":"tutorialSidebar"},"guides/miscellaneous/directory":{"id":"guides/miscellaneous/directory","title":"Directory structure (multi-file)","description":"This page is about the directory generated by flutterrustbridge_codegen create/integrate.","sidebar":"tutorialSidebar"},"guides/miscellaneous/expanding-macros":{"id":"guides/miscellaneous/expanding-macros","title":"Expanding macros","description":"This library automatically handles macros inside your code. For example, support you calls a macro that will generate a struct, then even if that struct is not in the code directly, this library can understand it.","sidebar":"tutorialSidebar"},"guides/miscellaneous/index":{"id":"guides/miscellaneous/index","title":"Miscellaneous","description":"","sidebar":"tutorialSidebar"},"guides/miscellaneous/methods":{"id":"guides/miscellaneous/methods","title":"Methods","description":"There is support for structs with methods. Both static methods, and non-static methods are supported.","sidebar":"tutorialSidebar"},"guides/miscellaneous/safety":{"id":"guides/miscellaneous/safety","title":"Safety and CI","description":"CI","sidebar":"tutorialSidebar"},"guides/miscellaneous/upgrade":{"id":"guides/miscellaneous/upgrade","title":"Upgrade to V2","description":"This guide shows how to upgrade a project using flutterrustbridge V1 to V2.","sidebar":"tutorialSidebar"},"guides/miscellaneous/whats-new":{"id":"guides/miscellaneous/whats-new","title":"What\'s new in V2","description":"Changelog","sidebar":"tutorialSidebar"},"guides/overview":{"id":"guides/overview","title":"Overview","description":"There are a lot of documentations, but there is no need to learn all in details. Instead:","sidebar":"tutorialSidebar"},"guides/performance/index":{"id":"guides/performance/index","title":"Performance","description":"","sidebar":"tutorialSidebar"},"guides/performance/overview":{"id":"guides/performance/overview","title":"Overview","description":"During the two years, I have not seen people saying flutterrustbridge is too slow when they use it.","sidebar":"tutorialSidebar"},"guides/types/arbitrary/dart-dynamic":{"id":"guides/types/arbitrary/dart-dynamic","title":"Dart dynamic type","description":"Dart\'s dynamic is a special type that can hold any type of value. Although it is possible","sidebar":"tutorialSidebar"},"guides/types/arbitrary/dart-opaque":{"id":"guides/types/arbitrary/dart-opaque","title":"Automatic arbitrary Dart type","description":"This feature is just like the mirror of the automatic arbitrary Rust type.","sidebar":"tutorialSidebar"},"guides/types/arbitrary/index":{"id":"guides/types/arbitrary/index","title":"Arbitrary types","description":"","sidebar":"tutorialSidebar"},"guides/types/arbitrary/rust-auto-opaque":{"id":"guides/types/arbitrary/rust-auto-opaque","title":"Automatic arbitrary Rust type","description":"This feature, sometimes called RustAutoOpaque throughout the documentation,","sidebar":"tutorialSidebar"},"guides/types/arbitrary/rust-opaque":{"id":"guides/types/arbitrary/rust-opaque","title":"Manual arbitrary Rust type","description":"Usually the automatic arbitrary Rust type is sufficient,","sidebar":"tutorialSidebar"},"guides/types/index":{"id":"guides/types/index","title":"Types","description":"","sidebar":"tutorialSidebar"},"guides/types/overview":{"id":"guides/types/overview","title":"Overview","description":"There are basically two categories when it comes to types:","sidebar":"tutorialSidebar"},"guides/types/translatable/detailed/alias":{"id":"guides/types/translatable/detailed/alias","title":"Type alias","description":"Type alias is also supported. For example:","sidebar":"tutorialSidebar"},"guides/types/translatable/detailed/chrono":{"id":"guides/types/translatable/detailed/chrono","title":"DateTime (Chrono)","description":"Codegen optionally support chrono crate with feature chrono.","sidebar":"tutorialSidebar"},"guides/types/translatable/detailed/enum":{"id":"guides/types/translatable/detailed/enum","title":"Enums","description":"Rust\'s enum are known to be very expressive and powerful - it allows each enum variant to have different associated data. Dart does not have such things in built-in enums, but no worries - we will automatically translate it into the equivalent using the freezed Dart library. The syntax for freezed may look a bit strange at the first glance, but please look at its doc and see its powerfulness.","sidebar":"tutorialSidebar"},"guides/types/translatable/detailed/index":{"id":"guides/types/translatable/detailed/index","title":"Detailed types","description":"","sidebar":"tutorialSidebar"},"guides/types/translatable/detailed/option":{"id":"guides/types/translatable/detailed/option","title":"Options","description":"Dart has special syntaxs for nullable variables - the ? symbol, and we translate Option into ? automatically. You may refer to the official doc for more information.","sidebar":"tutorialSidebar"},"guides/types/translatable/detailed/struct":{"id":"guides/types/translatable/detailed/struct","title":"Structs","description":"Normal Rust structs are supported. You can even use recursive fields, such as pub struct TreeNode { pub value Vec, pub parent: Box }.","sidebar":"tutorialSidebar"},"guides/types/translatable/detailed/tuple":{"id":"guides/types/translatable/detailed/tuple","title":"Tuples","description":"Introduced in Dart 3, records provide the equivalent of Rust\'s tuples.","sidebar":"tutorialSidebar"},"guides/types/translatable/detailed/uuid":{"id":"guides/types/translatable/detailed/uuid","title":"UUID","description":"Codegen optionally support uuid crate with feature uuid.","sidebar":"tutorialSidebar"},"guides/types/translatable/detailed/vec":{"id":"guides/types/translatable/detailed/vec","title":"Vec and array","description":"Vec, Vec, ...","sidebar":"tutorialSidebar"},"guides/types/translatable/external/diff-crate":{"id":"guides/types/translatable/external/diff-crate","title":"Different crates","description":"Consider the types in other crates.","sidebar":"tutorialSidebar"},"guides/types/translatable/external/index":{"id":"guides/types/translatable/external/index","title":"External types","description":"","sidebar":"tutorialSidebar"},"guides/types/translatable/external/same-crate":{"id":"guides/types/translatable/external/same-crate","title":"Same crate","description":"For types in other files within the same crate, imported symbols can be used normally.","sidebar":"tutorialSidebar"},"guides/types/translatable/index":{"id":"guides/types/translatable/index","title":"Translatable types","description":"","sidebar":"tutorialSidebar"},"guides/types/translatable/return":{"id":"guides/types/translatable/return","title":"Return Types & Exceptions","description":"Suppose your function wants to return a String, then all these return types are supported:","sidebar":"tutorialSidebar"},"guides/types/translatable/simple-correspondence":{"id":"guides/types/translatable/simple-correspondence","title":"Simple correspondence","description":"Here is a brief glance showing what the code generator can generate (non-exhaustive). Some rows have hyper-links pointing to more detailed explanations.","sidebar":"tutorialSidebar"},"guides/types/translatable/stream":{"id":"guides/types/translatable/stream","title":"Stream / Iterator","description":"What is Stream? In short: call once, return multiple times; like Iterators.","sidebar":"tutorialSidebar"},"guides/types/translatable/zero-copy":{"id":"guides/types/translatable/zero-copy","title":"Zero copy","description":"By default, copies are avoided automatically when possible,","sidebar":"tutorialSidebar"},"guides/users":{"id":"guides/users","title":"Who is using it","description":"As an initial version of this page, I briefly list some very rough data here.","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"Introduction","description":"Rust Package","sidebar":"tutorialSidebar"},"manual/changelog":{"id":"manual/changelog","title":"Changelog","description":"2.0.0-dev.3","sidebar":"tutorialSidebar"},"manual/ffigen-troubleshooting":{"id":"manual/ffigen-troubleshooting","title":"Ffigen Troubleshooting","description":"LLVM needs to be installed","sidebar":"tutorialSidebar"},"manual/index":{"id":"manual/index","title":"Manual","description":"","sidebar":"tutorialSidebar"},"manual/integrate":{"id":"manual/integrate","title":"Integrate Rust with Dart","description":"","sidebar":"tutorialSidebar"},"manual/integrate/builtin":{"id":"manual/integrate/builtin","title":"flutter_rust_bridge_codegen create/integrate command","description":"As is seen in the overview and quickstart,","sidebar":"tutorialSidebar"},"manual/integrate/cargokit":{"id":"manual/integrate/cargokit","title":"Cargokit","description":"Please refer to its documentation for how to use it.","sidebar":"tutorialSidebar"},"manual/integrate/existing/android/cmake":{"id":"manual/integrate/existing/android/cmake","title":"CMake with Gradle","description":"If you have taken a look at either the windows or linux folder,","sidebar":"tutorialSidebar"},"manual/integrate/existing/android/index":{"id":"manual/integrate/existing/android/index","title":"Integrating with Android","description":"The setup process is identical to Android setup,","sidebar":"tutorialSidebar"},"manual/integrate/existing/android/tasks":{"id":"manual/integrate/existing/android/tasks","title":"Hooking onto tasks","description":"This is the same method used by the app template and also the easier one.","sidebar":"tutorialSidebar"},"manual/integrate/existing/deps":{"id":"manual/integrate/existing/deps","title":"Installing dependencies","description":"Next, we need to install a few build-time and runtime dependencies.","sidebar":"tutorialSidebar"},"manual/integrate/existing/desktop":{"id":"manual/integrate/existing/desktop","title":"Integrating with Windows and Linux","description":"This guide groups together instructions for Windows and Linux desktop apps,","sidebar":"tutorialSidebar"},"manual/integrate/existing/finish":{"id":"manual/integrate/existing/finish","title":"Wrapping up","description":"Congratulations! You have successfully added a Rust component to","sidebar":"tutorialSidebar"},"manual/integrate/existing/index":{"id":"manual/integrate/existing/index","title":"Use BrickHub to add to existing projects","description":"This guide is an intermediate-level introduction to integrating Rust with","sidebar":"tutorialSidebar"},"manual/integrate/existing/ios/gen":{"id":"manual/integrate/existing/ios/gen","title":"Generating bindings","description":"Now that we\'ve got most of the plumbing out of the way, let\'s compile our Rust","sidebar":"tutorialSidebar"},"manual/integrate/existing/ios/headers":{"id":"manual/integrate/existing/ios/headers","title":"Using dummy headers","description":"flutterrustbridge_codegen created a C header which lists all the","sidebar":"tutorialSidebar"},"manual/integrate/existing/ios/index":{"id":"manual/integrate/existing/ios/index","title":"Integrating with iOS/MacOS","description":"*Credit to brotskydotcom/rust-on-ios","sidebar":"tutorialSidebar"},"manual/integrate/existing/ios/linking":{"id":"manual/integrate/existing/ios/linking","title":"Linking the project","description":"Open ios/Runner.xcodeproj in Xcode, then add $crate/$crate.xcodeproj as a subproject","sidebar":"tutorialSidebar"},"manual/integrate/existing/ios/macos":{"id":"manual/integrate/existing/ios/macos","title":"Integrating with MacOS","description":"The steps required to integrate with MacOS are identical to those of iOS, save for some minor details.","sidebar":"tutorialSidebar"},"manual/integrate/existing/ios/proj":{"id":"manual/integrate/existing/ios/proj","title":"Creating the Rust project","description":"First, follow the instructions on the Usage","sidebar":"tutorialSidebar"},"manual/integrate/existing/new-crate":{"id":"manual/integrate/existing/new-crate","title":"Creating a new crate","description":"First, if you haven\'t done so already, create a new crate within your project directory","sidebar":"tutorialSidebar"},"manual/integrate/existing/usage":{"id":"manual/integrate/existing/usage","title":"Using the dynamic library","description":"If everything went well, running flutter run will now build your Rust library,","sidebar":"tutorialSidebar"},"manual/integrate/existing/web":{"id":"manual/integrate/existing/web","title":"Integrating with Web","description":"Refer to the Web setup page for required installables.","sidebar":"tutorialSidebar"},"manual/integrate/library/ci":{"id":"manual/integrate/library/ci","title":"Continuous Integration & Deployment (CI/CD)","description":"The CI/CD detailed here, using GitHub Actions, automates a lot of the busy work","sidebar":"tutorialSidebar"},"manual/integrate/library/creating-libraries/dart-only":{"id":"manual/integrate/library/creating-libraries/dart-only","title":"Dart-only base","description":"This page details how to set up the initial structure of our monorepo,","sidebar":"tutorialSidebar"},"manual/integrate/library/creating-libraries/flutter-wrapper":{"id":"manual/integrate/library/creating-libraries/flutter-wrapper","title":"Flutter wrapper","description":"On this page, we will start creating the Flutter wrapper around our Dart-only library package.","sidebar":"tutorialSidebar"},"manual/integrate/library/creating-libraries/index":{"id":"manual/integrate/library/creating-libraries/index","title":"Creating the libraries","description":"In this section, we will create our Dart-only base library and then","sidebar":"tutorialSidebar"},"manual/integrate/library/index":{"id":"manual/integrate/library/index","title":"Creating a Dart/Flutter library with binary release","description":"In this chapter, we discuss how to add flutterrustbridge (FRB)","sidebar":"tutorialSidebar"},"manual/integrate/library/overview/index":{"id":"manual/integrate/library/overview/index","title":"Overview","description":"This section of the user guide will walk you through the entire process of","sidebar":"tutorialSidebar"},"manual/integrate/library/overview/melos":{"id":"manual/integrate/library/overview/melos","title":"Monorepo with Melos","description":"This page covers the basics of how to setup and use Melos,","sidebar":"tutorialSidebar"},"manual/integrate/library/overview/setup":{"id":"manual/integrate/library/overview/setup","title":"Setup","description":"Dependencies","sidebar":"tutorialSidebar"},"manual/integrate/library/platform-setup/android":{"id":"manual/integrate/library/platform-setup/android","title":"Android","description":"There are a few different ways to integrate with our Android binaries when building for Android. None are particularly outstanding:","sidebar":"tutorialSidebar"},"manual/integrate/library/platform-setup/index":{"id":"manual/integrate/library/platform-setup/index","title":"Platform setup","description":"In this subsection, we will be exploring how to set up our Flutter wrapper package","sidebar":"tutorialSidebar"},"manual/integrate/library/platform-setup/ios-and-macos":{"id":"manual/integrate/library/platform-setup/ios-and-macos","title":"iOS & macOS","description":"Flutter libraries targeting iOS and macOS use cocoapods for dependencies,","sidebar":"tutorialSidebar"},"manual/integrate/library/platform-setup/windows-and-linux":{"id":"manual/integrate/library/platform-setup/windows-and-linux","title":"Windows & Linux","description":"Windows and Linux both use CMake for their build system,","sidebar":"tutorialSidebar"},"manual/integrate/native-assets":{"id":"manual/integrate/native-assets","title":"Native assets","description":"Dart is developing a new language feature,","sidebar":"tutorialSidebar"},"manual/integrate/overview":{"id":"manual/integrate/overview","title":"Overview","description":"There are roughly two components, let\'s call them \\"core\\" and \\"compilation\\":","sidebar":"tutorialSidebar"},"manual/integrate/template/generate/adding-code":{"id":"manual/integrate/template/generate/adding-code","title":"Adding new code","description":"Let\'s say we need to change Platform such that we don\'t really care about whether it","sidebar":"tutorialSidebar"},"manual/integrate/template/generate/build-runner":{"id":"manual/integrate/template/generate/build-runner","title":"Using build_runner","description":"Inspect your lib/bridge_generated.dart and you will see that the definition of Platform has changed:","sidebar":"tutorialSidebar"},"manual/integrate/template/generate/finish":{"id":"manual/integrate/template/generate/finish","title":"Wrapping up","description":"With our new definition of Platform in place, we can rewrite the previous code to make use","sidebar":"tutorialSidebar"},"manual/integrate/template/generate/index":{"id":"manual/integrate/template/generate/index","title":"Generating code","description":"This section assumes you followed the instructions in Creating a new project, and has successfully flutter run on your target device.","sidebar":"tutorialSidebar"},"manual/integrate/template/generate/install":{"id":"manual/integrate/template/generate/install","title":"Installing codegen","description":"More information in the Installing dependencies section.","sidebar":"tutorialSidebar"},"manual/integrate/template/index":{"id":"manual/integrate/template/index","title":"Use code template to create new projects","description":"In this chapter, we are going to use create your own project from a code template. It seems a bit long, but it is just because we have tried to describe every detail that you may encounter.","sidebar":"tutorialSidebar"},"manual/integrate/template/setup/android":{"id":"manual/integrate/template/setup/android","title":"Android setup","description":"Before trying this, ensure you can run the example project.","sidebar":"tutorialSidebar"},"manual/integrate/template/setup/desktop":{"id":"manual/integrate/template/setup/desktop","title":"Windows and Linux","description":"Windows and Linux share the same build system (CMake), making setup for these two","sidebar":"tutorialSidebar"},"manual/integrate/template/setup/index":{"id":"manual/integrate/template/setup/index","title":"Creating a new project","description":"Start by creating a repository using the template from [flutterrustbridge_template]","sidebar":"tutorialSidebar"},"manual/integrate/template/setup/ios":{"id":"manual/integrate/template/setup/ios","title":"iOS setup","description":"iOS requires some additional Rust targets for cross-compilation:","sidebar":"tutorialSidebar"},"manual/integrate/template/setup/others":{"id":"manual/integrate/template/setup/others","title":"Other platforms","description":"For all remaining platforms, there are no required setup steps to take, apart from those listed in Desktop support for Flutter. If you need to check your progress, run flutter doctor -v and it will display the status of your toolchain and any actionable steps. The rest of this page","sidebar":"tutorialSidebar"},"manual/integrate/template/setup/web":{"id":"manual/integrate/template/setup/web","title":"Web setup","description":"Building on web requires nightly Rust, the wasm32-unknown-unknown target","sidebar":"tutorialSidebar"},"manual/integrate/template/tour/api":{"id":"manual/integrate/template/tour/api","title":"native/src/api.rs","description":"This is the default entry point for your library. Only functions defined here will be eligible for codegen.","sidebar":"tutorialSidebar"},"manual/integrate/template/tour/cmake":{"id":"manual/integrate/template/tour/cmake","title":"rust.cmake","description":"In windows and linux are two identical files named rust.cmake.","sidebar":"tutorialSidebar"},"manual/integrate/template/tour/gradle":{"id":"manual/integrate/template/tour/gradle","title":"android/app/build.gradle","description":"This file is part of the default Flutter build process for Android apps.","sidebar":"tutorialSidebar"},"manual/integrate/template/tour/index":{"id":"manual/integrate/template/tour/index","title":"Template tour","description":"success-screen","sidebar":"tutorialSidebar"},"manual/integrate/template/tour/justfile":{"id":"manual/integrate/template/tour/justfile","title":"justfile","description":"This file defines the recipes for the [just] command runner, in a similar vein to make and Makefile. [just] is built using Rust and improves upon the traditional Makefile syntax with better support for","sidebar":"tutorialSidebar"},"manual/integrate/template/tour/native-proj":{"id":"manual/integrate/template/tour/native-proj","title":"native/native.xcodeproj","description":"This is the Xcode project folder for the Rust native library generated by cargo-xcode.","sidebar":"tutorialSidebar"},"manual/miscellaneous":{"id":"manual/miscellaneous","title":"Miscellaneous","description":"","sidebar":"tutorialSidebar"},"manual/miscellaneous/archived/build-wasm":{"id":"manual/miscellaneous/archived/build-wasm","title":"Building a WASM binary manually","description":"Here are the complete commands for building a WASM binary with this library:","sidebar":"tutorialSidebar"},"manual/miscellaneous/archived/generate-multiple-files":{"id":"manual/miscellaneous/archived/generate-multiple-files","title":"Generating multiple files","description":"Author: @dbsxdbsx","sidebar":"tutorialSidebar"},"manual/miscellaneous/archived/index":{"id":"manual/miscellaneous/archived/index","title":"Archived documentations","description":"This chapter contains archived documentations.","sidebar":"tutorialSidebar"},"manual/miscellaneous/archived/misc-contributing":{"id":"manual/miscellaneous/archived/misc-contributing","title":"Misc operations in contributing","description":"Remark: Some docs here seem to be outdated. Refer to ci.yaml, main doc, justfile, etc to see an up-to-date version. This appendix will be overhauled.","sidebar":"tutorialSidebar"},"manual/miscellaneous/archived/misc-feature":{"id":"manual/miscellaneous/archived/misc-feature","title":"Miscellaneous features","description":"Separate generated definitions from implementations","sidebar":"tutorialSidebar"},"manual/miscellaneous/archived/multiple-files":{"id":"manual/miscellaneous/archived/multiple-files","title":"Multiple files","description":"When having a large project, it is often insufficient to put everything in a single api.rs, but instead we may want to separate it into apiofonemodule.rs, apiofanothermodule.rs, etc. That is why we have this feature.","sidebar":"tutorialSidebar"},"manual/miscellaneous/archived/quickstart":{"id":"manual/miscellaneous/archived/quickstart","title":"Quickstart","description":"Write down Rust functions and types normally.","sidebar":"tutorialSidebar"},"manual/miscellaneous/archived/set-up-from-scratch":{"id":"manual/miscellaneous/archived/set-up-from-scratch","title":"Set up Flutter/Dart+Rust support from scratch","description":"This documentation is archived, though technically still correct. Have a look at integrating with existing projects chapters for a more detailed demonstration.","sidebar":"tutorialSidebar"},"manual/miscellaneous/archived/tutorial-pure-dart":{"id":"manual/miscellaneous/archived/tutorial-pure-dart","title":"Tutorial: Pure Dart","description":"Remark: The valgrindtest section of the CI workflow can also be useful, if you want details of each command and want to see Valgrind configuration.","sidebar":"tutorialSidebar"},"manual/miscellaneous/archived/tutorial-with-flutter/alternative-ndk":{"id":"manual/miscellaneous/archived/tutorial-with-flutter/alternative-ndk","title":"Alternative NDK setup","description":"This is only needed if you wish to use a version of the Android NDK higher than version 22 with versions of Rust that are lower than version 1.68.","sidebar":"tutorialSidebar"},"manual/miscellaneous/archived/tutorial-with-flutter/index":{"id":"manual/miscellaneous/archived/tutorial-with-flutter/index","title":"Tutorial: A Flutter+Rust app","description":"","sidebar":"tutorialSidebar"},"manual/miscellaneous/archived/tutorial-with-flutter/setup-android":{"id":"manual/miscellaneous/archived/tutorial-with-flutter/setup-android","title":"Android setup","description":"JDK 8","sidebar":"tutorialSidebar"},"manual/miscellaneous/archived/tutorial-with-flutter/tutorial":{"id":"manual/miscellaneous/archived/tutorial-with-flutter/tutorial","title":"Tutorial: A Flutter+Rust app","description":"In this tutorial, let us draw a Mandelbrot set (a well-known infinite-resolution \\"image\\" generated by a simple math formula). The image is plotted in Flutter UI, generated by Rust algorithm, and communicated via this library.","sidebar":"tutorialSidebar"},"manual/miscellaneous/archived/unit-tests-dart":{"id":"manual/miscellaneous/archived/unit-tests-dart","title":"Unit tests in dart","description":"To run flutter or dart test with the bridge you need to load the library on your own development machine (Windows/MacOS/Linux/CI). For that use loadLibForFlutter or loadLibForDart, for example:","sidebar":"tutorialSidebar"},"manual/miscellaneous/archived/wasm":{"id":"manual/miscellaneous/archived/wasm","title":"WASM","description":"flutterrustbridge_codegen can also generate code to run in browsers using","sidebar":"tutorialSidebar"},"manual/miscellaneous/article/async-in-rust":{"id":"manual/miscellaneous/article/async-in-rust","title":"Async in Rust","description":"Author: @AlienKevin","sidebar":"tutorialSidebar"},"manual/miscellaneous/article/index":{"id":"manual/miscellaneous/article/index","title":"Articles","description":"This chapter contains some articles related to flutterrustbridge.","sidebar":"tutorialSidebar"},"manual/miscellaneous/wasm-limitations":{"id":"manual/miscellaneous/wasm-limitations","title":"Limitations of WASM","description":"- Safari cannot spawn nested Workers. A workaround is to build two variants of the library,","sidebar":"tutorialSidebar"},"manual/miscellaneous/web-cross-origin":{"id":"manual/miscellaneous/web-cross-origin","title":"Cross-origin in Web","description":"Background","sidebar":"tutorialSidebar"},"manual/troubleshooting":{"id":"manual/troubleshooting","title":"Troubleshooting","description":"Issue with storedartpost_cobject","sidebar":"tutorialSidebar"},"quickstart":{"id":"quickstart","title":"Quickstart","description":"If you like to setup in one command:","sidebar":"tutorialSidebar"}}}')}}]);